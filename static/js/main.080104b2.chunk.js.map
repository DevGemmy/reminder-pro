{"version":3,"sources":["components/App.jsx","actions/index.js","constants.js","reducers/index.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","dueDate","console","log","addReminder","id","deleteReminder","_this2","reminders","react_default","a","createElement","className","map","reminder","key","moment","Date","fromNow","onClick","_this3","placeholder","onChange","event","setState","target","value","type","renderReminder","clearReminders","Component","connect","action","Math","random","arguments","length","undefined","read_cookie","concat","toConsumableArray","bake_cookie","filter","removeById","store","createStore","reducer","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.080104b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n/*import { bindActionCreators } from 'redux';*/\r\nimport { addReminder, deleteReminder, clearReminders } from '../actions';\r\nimport moment from 'moment';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            dueDate: ''\r\n        }\r\n    }\r\n\r\n    addReminder() {\r\n        console.log('this.state.dueDate', this.state.dueDate);\r\n        this.props.addReminder(this.state.text, this.state.dueDate);\r\n    }\r\n\r\n    deleteReminder(id) {\r\n        this.props.deleteReminder(id);\r\n    }\r\n\r\n    renderReminder() {\r\n        const { reminders } = this.props;\r\n        return (\r\n            <ul className=\"list-group col-sm-4\">\r\n                {\r\n                    reminders.map(reminder => {\r\n                        return (\r\n                            <li key={reminder.id} className=\"list-group-item\"> \r\n                                <div className=\"list-item\">\r\n                                    <div>{reminder.text}</div>\r\n                                    <div><em>{moment(new Date(reminder.dueDate)).fromNow()}</em></div>\r\n                                </div>\r\n                                <div \r\n                                    className=\"list-item delete-button\"\r\n                                    onClick={() => this.deleteReminder(reminder.id)}\r\n                                >\r\n                                    &#x2715;\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"title\">\r\n                    Reminder Pro\r\n                </div>\r\n                <div className=\"form-inline reminder-form\">\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            placeholder=\"I have to...\"\r\n                            onChange={event => this.setState({text: event.target.value})}\r\n                        />\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"datetime-local\"\r\n                            onChange={event => this.setState({dueDate: event.target.value})}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        onClick={() => this.addReminder()}\r\n                    >\r\n                        Add reminder\r\n                    </button>\r\n                </div>\r\n                { this.renderReminder() }\r\n                <div\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => this.props.clearReminders}\r\n                >\r\n                    Clear Reminders\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\n/*function mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({addReminder}, dispatch);\r\n}*/\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        reminders: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addReminder, deleteReminder, clearReminders })(App);","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS} from '../constants';\r\n\r\nexport const addReminder = (text, dueDate) => {\r\n    const action = {\r\n        type: ADD_REMINDER,\r\n        text,\r\n        dueDate\r\n    }\r\n    console.log('action in addReminder', action);\r\n    return action;\r\n}\r\n\r\nexport const deleteReminder = (id) => {\r\n    const action = {\r\n        type: DELETE_REMINDER,\r\n        id\r\n    }\r\n    console.log('action in deleteReminder', action);\r\n    return action;\r\n}\r\n\r\nexport const clearReminders = () => {\r\n    return {\r\n        type: CLEAR_REMINDERS\r\n    }\r\n}","export const ADD_REMINDER = 'ADD_REMINDER';\r\nexport const DELETE_REMINDER = 'DELETE_REMINDER';\r\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS';","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../constants';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\n\r\nconst reminder = (action) => {\r\n    let { text, dueDate } = action\r\n    return {\r\n        id: Math.random(),\r\n        text,\r\n        dueDate\r\n    }\r\n}\r\n\r\nconst removeById = (state = [], id) => {\r\n    const reminders = state.filter(reminder => reminder.id !== id);\r\n    console.log('new reduced reminder', reminders);\r\n    return reminders;\r\n}\r\n\r\nconst reminders = (state = [], action) => {\r\n    let reminders = null;\r\n    state = read_cookie('reminders');\r\n    switch (action.type) {\r\n        case ADD_REMINDER: \r\n            reminders = [...state, reminder(action)];\r\n            bake_cookie('reminders', reminders);\r\n            return reminders;\r\n        case DELETE_REMINDER:\r\n            reminders = removeById(state, action.id);\r\n            bake_cookie('reminders', reminders);\r\n            return reminders;\r\n        case CLEAR_REMINDERS:\r\n            reminders = [];\r\n            bake_cookie('reminders', reminders);\r\n            return reminders;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reminders;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './reducers';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}